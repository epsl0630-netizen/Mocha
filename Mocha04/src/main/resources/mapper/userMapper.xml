<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- Namespace를 통해 JAVA 클래스와 Annotation클래스와 동기 -->
 <mapper namespace="user">
 	<resultMap type="mocha.ezen.com.departments.DepartmentDTO" id="deptUserMap">
 		<id property="dept_id" column="dept_id" />
 		<result property="dept_name" column="dept_name" />
 		<result property="created_at" column="created_at" />
 		<result property="updated_at" column="updated_at" />
 		<collection property="user" ofType="mocha.ezen.com.user.UserDTO">
 			<id property="user_id" column="user_id"/>
		    <result property="user_pw" column="user_pw"/>
		    <result property="name" column="name"/>
		    <result property="user_gender" column="user_gender"/>
		    <result property="is_active" column="is_active"/>
		    <result property="dept_id" column="dept_id"/>
		    <result property="email" column="email"/>
		    <result property="mobile" column="mobile"/>
		    <result property="user_birth" column="user_birth"/>
		    <result property="user_addr" column="user_addr"/>
		    <result property="user_rank" column="user_rank"/>
		    <result property="authority" column="authority"/>
		    <result property="user_file_name" column="user_file_name"/>
		    <result property="user_photo" column="user_photo"/>
		    <result property="created_at" column="created_at"/>
		    <result property="updated_at" column="updated_at"/>
		    <result property="dept_name" column="dept_name"/>
 		</collection>
 	</resultMap>
 	
 <insert id="join" parameterType="java.lang.String"
 useGeneratedKeys="true" keyProperty="user_id">
 	insert into user
 	(user_id, name, dept_id, user_gender, user_birth, email, user_pw) 
 	values ( #{user_id}, #{name}, #{dept_id}, #{user_gender}, #{user_birth}, #{email}, md5(#{user_pw}) )
 </insert>
 <select id="idDuplicateCheck" parameterType="java.lang.String">
 	select count(*) as count 
 	from user 
 	where user_id = #{user_id} 
 </select>
 <select id="login" parameterType="java.lang.String">
 	select user_id, name, user_gender,is_active, dept_id, 
 	date(user_birth) as user_birth, 
 	email, mobile, user_addr, user_file_name, user_photo, 
 	date(created_at) as created_at, 
 	user_rank, 
 	authority 
 	from user 
 	where user_id = #{user_id} and
 	user_pw = md5(#{user_id})
 </select>
 <select id="userList" parameterType="mocha.ezen.com.common.dto.UserSearchDTO" resultType="mocha.ezen.com.user.UserDTO">
 	select user_id, name, is_active, 
 	(select dept_name from departments where dept_id = user.dept_id) as dept_name 
 	from user
 	where 1 = 1
	<if test="dept_id != null">
		and  dept_id = #{dept_id}
	</if>
	<if test="authority == true">
		and  authority = #{authority}
	</if>
	<if test="keyword != null and keyword != ''">
		and  (user_id like '%${keyword}%'
		or name like '%${keyword}%' )
	</if>
 </select>
 <select id="total" parameterType="mocha.ezen.com.common.dto.UserSearchDTO" resultType="java.lang.Integer">
 	select count(*) as total 
 	from user
 	where 1 = 1
	<if test="dept_id != null">
		and  dept_id = #{dept_id}
	</if>
	<if test="authority == true">
		and  authority = #{authority}
	</if>
	<if test="keyword != null and keyword != ''">
		and  (user_id like '%${keyword}%'
		or name like '%${keyword}%' )
	</if> 	 
 </select>
 <select id="userCheck" parameterType="java.lang.String" resultType="mocha.ezen.com.user.UserDTO">
 	select user_id, name, user_gender,is_active, dept_id, 
 	date(user_birth) as user_birth, 
 	email, mobile, user_addr, user_file_name, user_photo, 
 	date(created_at) as created_at, 
 	user_rank, 
 	authority 
 	from user 
 	where user_id = #{user_id} 
 </select>
 <update id="modify" parameterType="mocha.ezen.com.user.UserDTO">
 	update user set 
	dept_id = #{dept_id},  
	name = #{name},  
	email = #{email}, 
	user_birth = #{user_birth}, 
	user_gender = #{user_gender}, 
	authority = #{authority}, 
	<if test='mobile != null and !mobile.equals("")'>
		mobile = #{mobile}, 
	</if>	
	<if test='user_rank != null and !user_rank.equals("")'>
		user_rank = #{user_rank}, 
	</if>
	<if test='user_addr != null and !user_addr.equals("")'>
		user_addr = #{user_addr}, 
	</if>
	<if test='user_pw != null and !user_pw.equals("")'>
		user_pw = md5(#{user_pw}), 
	</if>
	updated_at = now() 
	where user_id = #{user_id}
 </update>
 
 <!-- 부서에 해당하는 유저 목록 조인 -->
 <select id="deptWithUser" resultMap="deptUserMap">
		select * from departments
		inner join user on departments.dept_id  = user.dept_id;
</select>
 
<!--	<select id="searchUser" parameterType="mocha.ezen.com.UserSearchDTO" resultType="mocha.ezen.com.UserDTO">
		select user_id, user_pw, name, user_gender, is_active, dept_id, email, mobile, user_birth, created_at, user_addr, user_file_name, user_photo, user_rank
	 	from user
	 	<choose>
			<when test="sort == 'user_id'">
				 where user_id = #{user_id}
			</when>
			<when test="sort == 'name'">
				 where name = #{name}
			</when>
		</choose>
	</select>
	내가 결재해야하는것
	<select id="searchApproval" parameterType="mocha.ezen.com.ApprovalSearchDTO"  resultType="mocha.ezen.com.ApprovalDTO">
		select * 
		from approval 
		where approver.user_id = #{login_id} 
		and approval_status = 'IN_PROGRESS' 
		<choose>
			<when test="sort == 'user_id'">
				 and user_id = #{user_id}
			</when>
			<when test="sort == 'approval_title'">
				 and approval_title = #{name}
			</when>
		</choose>
	</select> -->
	<!-- <insert id="join" parameterType="com.ezen.vo.UserVO">
		insert into user 
			(userid,userpw,name,gender,hobby,fav,mail)
		values 
			(#{userid},md5(#{userpw}),#{name},#{gender},#{hobby},#{fav},#{mail})
	</insert>
	
	<select id="checkid" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*) as total
		from user
		where userid = #{ id }
	</select> 
	
	<select id="login" parameterType="com.ezen.vo.UserVO"
		resultType="com.ezen.vo.UserVO">		
		select * 
		from user
		where userid = #{ userid } and userpw = md5(#{ userpw })		
	</select>
	
	<insert id="insert" parameterType="com.ezen.vo.BoardVO" 
		useGeneratedKeys="true" keyProperty="no">
		insert into board (userid,title,kind,note,pname,fname) 
		values (#{userid},#{title},#{kind},#{note},
		<if test='fname != null and !fname.equals("")'>
			#{pname},#{fname}
		</if> 
		<if test='fname == null or fname.equals("")'>
			null, null
		</if>
		)		
	</insert>
	
	<select id="view" parameterType="java.lang.String" 
			resultType="com.ezen.vo.BoardVO">
		select 
			no,userid,title,kind,note,pname,fname,wdate,hit,
			(select name from user where userid = board.userid) as name
		from board
		where no = #{ no }
	</select>
	
	<update id="hit" parameterType="java.lang.String">
		update board set hit = hit + 1
		where no = #{ no }
	</update>
	
	<update id="update" parameterType="com.ezen.vo.BoardVO">
		update board set
		title = #{ title },
		note = #{ note },		
		<if test='fname != null and !fname.equals("")'>
			pname = #{pname},
			fname = #{fname},
		</if> 		
		kind = #{ kind }
		where no = #{ no }		
	</update>
	
	<delete id="delete_reply" parameterType="java.lang.String">
		delete from reply
		where no = #{ no }
	</delete>
		
	<delete id="delete" parameterType="java.lang.String">
		delete from board
		where no = #{ no }
	</delete>
	
	<select id="total" parameterType="com.ezen.vo.SearchVO"
		resultType="java.lang.Integer">
		select count(*) as total
		from board
		where kind = #{ kind } 
		<if test='keyword != null and !keyword.equals("")'>
			and title like '%${ keyword }%'
		</if>
	</select>
	
	<select id="list" parameterType="com.ezen.vo.SearchVO"
		resultType="com.ezen.vo.BoardVO">
		select no,title,date(wdate) as wdate,hit,
		(select name from user where userid = board.userid) as name,
		(select count(*) from reply where no = board.no) as rcount
		from board
		where kind = #{ kind } 
		<if test='keyword != null and !keyword.equals("")'>
			and title like '%${ keyword }%'
		</if>
		order by no desc
		limit #{offset},10		
	</select>
	
	<insert id="reply_insert" parameterType="com.ezen.vo.ReplyVO" 
			useGeneratedKeys="true" keyProperty="rno">
		insert into reply (no, userid, rnote)
		values (#{no}, #{userid}, #{rnote})
	</insert>	
		
	<select id="reply_list" parameterType="java.lang.String" 
			resultType="com.ezen.vo.ReplyVO">
		select rno,userid,rnote,date(rwdate) as rwdate,
		(select name from user where userid = reply.userid) as name
		from reply
		where no = #{no}
		order by rno desc
	</select>		
	
	<delete id="reply_delete" parameterType="java.lang.String">
		delete from reply where rno = #{rno}
	</delete> -->		
</mapper>
